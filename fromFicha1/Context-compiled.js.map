{"version":3,"sources":["Context.js"],"names":[],"mappings":"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","file":"Context-compiled.js","sourcesContent":["'use strict';\r\n\r\n/**\r\n * Application Context\r\n * Instatiated for each command line\r\n * Is context that knows wich execution must be started\r\n */\r\nfunction Context() {\r\n\r\n    // privates\r\n    var file = \"\";\r\n    var leagues = [];\r\n    var generate = [];\r\n    var output = \"\";\r\n    var usage = \"\";\r\n    var data = [];\r\n\r\n    /**\r\n     * Map to each option and corresponding set data function\r\n     */\r\n    var populateContext = { \"-file\": setFile,\r\n                            \"-leagues\": setLeagues,\r\n                            \"-generate\": setGenerate,\r\n                            \"-output\": setOutput,\r\n                            \"-usage\": setUsage };\r\n\r\n    /**\r\n     * Sets file\r\n     * @param array\r\n     * @param index\r\n     */\r\n    function setFile(array,index) {\r\n        file = array[index + 1];\r\n        console.log(\"File name: \" + file);\r\n    }\r\n\r\n    /**\r\n     * Sets leagues with leagues data.\r\n     * Several requests, gives several leagues\r\n     *\r\n     * @param array leagues array\r\n     * @param index position\r\n     */\r\n    function setLeagues(array, index) {\r\n        var idx = index + 1;\r\n        var league = \"\";\r\n        while (array[idx].charAt(0) !== \"-\") {\r\n            league = league + \" \" + array[idx++];\r\n        }\r\n        league = league.replace(/['\"]+/g,\"\");\r\n        leagues = league.split(\",\");\r\n        console.log(\"Leagues: \" + league);\r\n        leagues.forEach(function(val, index, array){\r\n            array[index] = array[index].trim();\r\n            console.log(\"-\"+array[index]);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * For each league, adds a list of features to generate\r\n     * @param array fixtures\r\n     * @param index league index\r\n     */\r\n    function setGenerate(array,index) {\r\n        generate = array[index + 1].split(\",\");\r\n        console.log(\"Generate Option: \" + array[index + 1] );\r\n        generate.forEach(function(val){\r\n            console.log(\"-\"+val);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets output destination for each league passed in command line\r\n     * @param array of output destination\r\n     * @param index league index\r\n     */\r\n    function setOutput(array,index) {\r\n        output = array[index + 1];\r\n        console.log(\"Output path: \" + output);\r\n    }\r\n\r\n    /**\r\n     * Usage...\r\n     * description of command\r\n     */\r\n    function setUsage(){\r\n        usage =\r\n            \"Football Data HTML Generator\\n\\r\"+\r\n            \"Usage: node football-data.js \\<options>\\n\\r\"+\r\n            \"Where options include:\\n\\r\"+\r\n            \"-usage Shows the application usage\\n\\r\"+\r\n            \"-file \\<file-path> Reads all arguments from the text file in <file-path>\\n\\r\"+\r\n            \"-leagues \\<leagues-list> A comma separated list of the league names or its short\"+\r\n            \"names (e.g Primeira Liga, 2015/2016, PD)\\n\\r\"+\r\n            \"-generate [teams|fixtures|leagueTable|players] What to generate. A comma\"+\r\n            \"separated list of the defined values.\\n\\r\"+\r\n            \"-output <dir-path> Path to output directory where files are generated.\";\r\n        console.log(\"Usage: \" + usage);\r\n        process.exit(0);\r\n    }\r\n\r\n    /**\r\n     * Adds arguments parsed into context\r\n     * @param val argument name\r\n     * @param index league index\r\n     * @param array array of arguments\r\n     */\r\n    var putArgumentInContext = function (val, index, array) {\r\n\r\n        //valida o comando\r\n        if (typeof(val) == \"undefined\") {\r\n            console.log(\"Error! You must fill options! Try:\\n\");\r\n            setUsage();\r\n        }\r\n        else if(val.toString() != \"-file\" && val.toString() != \"-leagues\" && val.toString() != \"-generate\" && val.toString() != \"-output\" && val.toString() != \"-usage\"){\r\n            console.log(\"Error! Command line not exists! Try:\\n\");\r\n            setUsage();\r\n        }\r\n        else{\r\n            console.log(\"Put Argument: \"+val);\r\n            populateContext[val](array,index);\r\n        }\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Getters\r\n     */\r\n    function getFile(){ return file; }\r\n    function getOutput(){ return output; }\r\n    function getLeagues(){ return leagues; }\r\n    function getUsage() { return usage; }\r\n    function getGenerate() { return generate; }\r\n    function getData(prop){ return data[prop]; }\r\n\r\n    /**\r\n     * adds data to context\r\n     * @param prop data id\r\n     * @param value data value\r\n     */\r\n    function addData(prop,value){\r\n        data[prop] = value;\r\n    }\r\n\r\n    //publish public methods\r\n    return{\r\n        putArgumentInContext: putArgumentInContext,\r\n        getFile: getFile,\r\n        getOutput: getOutput,\r\n        getLeagues: getLeagues,\r\n        getUsage: getUsage,\r\n        getGenerate: getGenerate,\r\n        getData: getData,\r\n        addData: addData\r\n    };\r\n\r\n}\r\n\r\nmodule.exports = {\r\n    Context: Context\r\n};\r\n"]}